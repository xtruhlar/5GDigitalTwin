services:
  #MongoDB
  mongo:
    image: mongo:6.0
    container_name: mongo
    command: --bind_ip 0.0.0.0
    restart: always
    env_file:
      - .env
    volumes:
      - mongodbdata:/data/db
      - mongodbdata:/data/configdb
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "27017/udp"
      - "27017/tcp"
    networks:
      default:
        ipv4_address: ${MONGO_IP}
  #WebUI
  webui:
    image: docker_open5gs
    container_name: webui
    restart: always
    depends_on:
      - mongo
    env_file:
      - .env
    environment:
      - COMPONENT_NAME=webui
    volumes:
      - ./webui:/mnt/webui
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "9999/tcp"
    ports:
      - "9999:9999/tcp"
    networks:
      default:
        ipv4_address: ${WEBUI_IP}
  #NRF
  nrf:
    image: docker_open5gs
    container_name: nrf
    restart: always
    env_file:
      - .env
    environment:
      - COMPONENT_NAME=nrf
    volumes:
      - ./nrf:/mnt/nrf
      - ./log:/open5gs/install/var/log/open5gs
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "7777/tcp"
    networks:
      default:
        ipv4_address: ${NRF_IP}
  #SCP
  scp:
    image: docker_open5gs
    depends_on:
      - nrf
    container_name: scp
    restart: always
    env_file:
      - .env
    environment:
      - COMPONENT_NAME=scp
    volumes:
      - ./scp:/mnt/scp
      - ./log:/open5gs/install/var/log/open5gs
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "7777/tcp"
    networks:
      default:
        ipv4_address: ${SCP_IP}
  #AUSF
  ausf:
    image: docker_open5gs
    depends_on:
      - nrf
      - scp
    container_name: ausf
    restart: always
    env_file:
      - .env
    environment:
      - COMPONENT_NAME=ausf
    volumes:
      - ./ausf:/mnt/ausf
      - ./log:/open5gs/install/var/log/open5gs
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "7777/tcp"
    networks:
      default:
        ipv4_address: ${AUSF_IP}
  #UDR
  udr:
    image: docker_open5gs
    depends_on:
      - nrf
      - scp
      - mongo
    container_name: udr
    restart: always
    env_file:
      - .env
    environment:
      - COMPONENT_NAME=udr
    volumes:
      - ./udr:/mnt/udr
      - ./log:/open5gs/install/var/log/open5gs
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "7777/tcp"
    networks:
      default:
        ipv4_address: ${UDR_IP}
  #UDM
  udm:
    image: docker_open5gs
    depends_on:
      - nrf
      - scp
    container_name: udm
    restart: always
    env_file:
      - .env
    environment:
      - COMPONENT_NAME=udm
    volumes:
      - ./udm:/mnt/udm
      - ./log:/open5gs/install/var/log/open5gs
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "7777/tcp"
    networks:
      default:
        ipv4_address: ${UDM_IP}
  #PCF
  pcf:
    image: docker_open5gs
    depends_on:
      - nrf
      - scp
      - mongo
    container_name: pcf
    restart: always
    env_file:
      - .env
    environment:
      - COMPONENT_NAME=pcf
    volumes:
      - ./pcf:/mnt/pcf
      - ./log:/open5gs/install/var/log/open5gs
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "7777/tcp"
      - "9091/tcp"
    networks:
      default:
        ipv4_address: ${PCF_IP}
  #BSF
  bsf:
    image: docker_open5gs
    depends_on:
      - nrf
      - scp
      - mongo
    container_name: bsf
    restart: always
    env_file:
      - .env
    environment:
      - COMPONENT_NAME=bsf
    volumes:
      - ./bsf:/mnt/bsf
      - ./log:/open5gs/install/var/log/open5gs
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "7777/tcp"
    networks:
      default:
        ipv4_address: ${BSF_IP}
  #NSSF
  nssf:
    image: docker_open5gs
    depends_on:
      - nrf
      - scp
      - mongo
    container_name: nssf
    restart: always
    env_file:
      - .env
    environment:
      - COMPONENT_NAME=nssf
    volumes:
      - ./nssf:/mnt/nssf
      - ./log:/open5gs/install/var/log/open5gs
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "7777/tcp"
    networks:
      default:
        ipv4_address: ${NSSF_IP}
  #SMF
  smf:
    image: docker_open5gs
    depends_on:
      - nrf
      - scp
      - amf
    container_name: smf
    restart: always
    env_file:
      - .env
    environment:
      - COMPONENT_NAME=smf
      - DEPLOY_MODE=ALL
    volumes:
      - ./smf:/mnt/smf
      - ./log:/open5gs/install/var/log/open5gs
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "3868/udp"
      - "3868/tcp"
      - "3868/sctp"
      - "5868/udp"
      - "5868/tcp"
      - "5868/sctp"
      - "8805/udp"
      - "2123/udp"
      - "7777/tcp"
      - "9091/tcp"
    networks:
      default:
        ipv4_address: ${SMF_IP}
  #UPF
  upf:
    image: docker_open5gs
    depends_on:
      - nrf
      - scp
      - smf
    container_name: upf
    restart: always
    env_file:
      - .env
    environment:
      - COMPONENT_NAME=upf
    volumes:
      - ./upf:/mnt/upf
      - ./log:/open5gs/install/var/log/open5gs
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "2152/udp"
      - "8805/udp"
      - "9091/tcp"
    cap_add:
      - NET_ADMIN
    privileged: true
    sysctls:
      - net.ipv4.ip_forward=1
    networks:
      default:
        ipv4_address: ${UPF_IP}
  #AMF
  amf:
    image: docker_open5gs
    depends_on:
      - nrf
      - scp
      - ausf
      - udm
      - udr
      - pcf
      - bsf
    container_name: amf
    restart: always
    env_file:
      - .env
    environment:
      - COMPONENT_NAME=amf
    volumes:
      - ./amf:/mnt/amf
      - ./log:/open5gs/install/var/log/open5gs
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "38412/sctp"
      - "7777/tcp"
      - "9091/tcp"
    networks:
      default:
        ipv4_address: ${AMF_IP}
  # #Metrics - Prometheus
  metrics:
    build: ./metrics
    image: docker_metrics
    container_name: metrics
    restart: always
    env_file:
      - .env
    volumes:
      - ./metrics:/mnt/metrics
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "9090/tcp"
    ports:
      - "9090:9090/tcp"
    networks:
      default:
        ipv4_address: ${METRICS_IP}
  #Metrics - Grafana
  grafana:
    image: grafana/grafana:11.3.0
    container_name: grafana
    restart: always
    env_file:
      - .env
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/:/etc/grafana/provisioning/
      - ./grafana:/mnt/grafana
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_PATHS_DATA=/var/lib/grafana
      - METRICS_IP=${METRICS_IP}
    expose:
      - "3000/tcp"
    ports:
      - "3000:3000/tcp"
    networks:
      default:
        ipv4_address: ${GRAFANA_IP}
  #Metrics - Loki
  loki:
    image: grafana/loki:2.9.4
    container_name: loki
    restart: always
    command: -config.file=/etc/loki/config.yaml
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/config.yaml
      - loki_data:/loki
    expose:
      - "3100"
    ports:
      - "3100:3100"
    networks:
      default:
        ipv4_address: ${LOKI_IP}
  # Promtail
  promtail:
    image: grafana/promtail:2.9.4
    container_name: promtail
    volumes:
      - ./promtail-config.yaml:/etc/promtail/config.yaml
      - ./log:/mnt/logs
      - /etc/hostname:/etc/hostname
      - /etc/localtime:/etc/localtime:ro
    command: -config.file=/etc/promtail/config.yaml
    networks:
      default:
        ipv4_address: ${PROMTAIL_IP}
    depends_on:
      - loki
      - amf
  # Logwatcher
  logwatcher:
    build:
      context: .
      dockerfile: Dockerfile.logwatcher
    container_name: logwatcher
    volumes:
      - ./log:/open5gs/install/var/log/open5gs
    expose:
      - "9000"
    ports:
      - "9000:9000"
    networks:
      default:
        ipv4_address: ${LOGWATCHER_IP}
# Networks
networks:
  default:
    name: docker_open5gs_default
    ipam:
      config:
        - subnet: ${TEST_NETWORK}
# Volumes
volumes:
  grafana_data:
    name: grafana_data
  mongodbdata:
    name: docker_open5gs_mongodbdata
  dbdata:
    name: docker_open5gs_dbdata
  netdataconfig:
  netdatalib:
  netdatacache:
  loki_data:

